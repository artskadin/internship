{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","termin","setTermin","value","setValue","className","onSubmit","event","preventDefault","description","dictionary","console","log","e","id","type","name","onChange","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"grlBA0CeA,MAtCf,WAAgB,IAAD,EACeC,mBAAS,sGADxB,mBACNC,EADM,KACEC,EADF,OAEaF,mBAAS,IAFtB,mBAENG,EAFM,KAECC,EAFD,KAyBb,OACE,sBAAKC,UAAU,MAAf,UACE,+FACA,uBAAMC,SAxBQ,SAACC,GACjBA,EAAMC,iBAEN,IACE,IAAMC,EAAcC,EAAWP,GAC/BQ,QAAQC,IAAIH,GAGVP,EADyB,qBAAhBO,EACCA,EAEA,sGAEZ,MAAMI,GACNF,QAAQC,IAAIC,GAGdT,EAAS,KAQP,UACE,uBAAOU,GAAG,cAAV,mDACA,uBAAOC,KAAK,OAAOC,KAAK,OAAOb,MAAOA,EAAOc,SAP9B,SAACV,GAAD,OAAWH,EAASG,EAAMW,OAAOf,UAQhD,uBAAOE,UAAU,YAAYU,KAAK,SAASZ,MAAM,yDAEnD,6BAAKF,QCzBIkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9baf3252.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\nimport dictionary from './dictionary.json'\n\nfunction App() {\n  const [termin, setTermin] = useState('Здесь будет термин')\n  const [value, setValue] = useState('')\n\n  const getTermin = (event) => {\n    event.preventDefault()\n\n    try {\n      const description = dictionary[value]\n      console.log(description)\n\n      if (typeof description !== 'undefined') {\n        setTermin(description)\n      } else {\n        setTermin('Такого термина нет')\n      }\n    } catch(e) {\n      console.log(e)\n    }\n\n    setValue('')\n  }\n\n  const valueHandler = (event) => setValue(event.target.value)\n\n  return (\n    <div className=\"App\">\n      <h1>Мой словарь</h1>\n      <form onSubmit={getTermin}>\n        <label id=\"terminLable\">Тремин:</label>\n        <input type=\"text\" name=\"name\" value={value} onChange={valueHandler} />\n        <input className=\"getButton\" type=\"submit\" value=\"Получить \" />\n      </form>\n      <h3>{termin}</h3>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}